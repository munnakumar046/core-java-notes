Types of variables
==================
A name which is given to a memory location is called variable.

Purpose of variable is to store the data.

In java, variables are divided into two types.

1) Primitive variables
----------------------
	Primitive variables are used to represent primitive values.

2) Reference variables 
----------------------
	Reference variables are used to represent object reference.
	ex:
		Student s=new Student();
			|
		reference variable 

Based on the position and execution these variables are divided into three types.

1) Instance variables / non-static variables 

2) Static variables  / global variables 

3) Local variables / Temperory variables / automatic variables 


1) Instance variables
----------------------
A value of a variable which is varied(changes) from object to object is called instance variable.

Instance variable will be created at the time of object creation and it is destroyed at the time of object destruction.Hence scope of instance variable is same as scope of an object.

Instance variables will store in heap area as a part of an object.

Instance variable must and should declare immediately after the class but not inside methods, blocks and constructors.

Instance variable can access directly from instance area but we can't access directly from static area.

To access instance variable from static area we need to create object reference.

ex:1
---
class Test
{
	//instance variable 
	int i=10;

	public static void main(String[] args)
	{
		System.out.println(i); // C.T.E 
	}
}

ex:2
---
class Test
{
	//instance variable 
	int i=10;

	public static void main(String[] args)
	{
		Test t=new Test();
		System.out.println(t.i); // 10
	}
}


Note:
-------
If we won't initialize any value to instance variable JVM will initialized default values.

ex:3
----
class Test
{
	//instance variable 
	boolean b;

	public static void main(String[] args)
	{
		Test t=new Test();
		System.out.println(t.b); // false 
	}
}

ex:4
---
class Test
{
	//instance variable 
	int i=10;

	public static void main(String[] args)
	{
		Test t1=new Test();
		Test t2=new Test();

		System.out.println(t1.i); // 10
		System.out.println(t2.i); // 10

		t1.i=100;	

		System.out.println(t1.i); // 100
		System.out.println(t2.i); // 10
	}
}

ex:5
----
class Test
{

	public static void main(String[] args)
	{
		Test t=new Test();
		t.m1();
	}
	//non-static method 
	public void m1()
	{
		System.out.println("instance-method");
	}
}




















































































































